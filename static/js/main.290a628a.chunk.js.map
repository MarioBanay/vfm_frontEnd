{"version":3,"sources":["Constants.js","components/AuthenticationService.js","components/Login.jsx","store/actions.jsx","components/AuthenticatedRoute.jsx","components/Dashboard.jsx","components/Logout.jsx","components/PageNotFound.jsx","components/Header.jsx","api/dataService/DriverDataService.js","components/Drivers.jsx","components/Driver.jsx","api/dataService/VehicleDataService.js","components/Vehicle.jsx","components/Vehicles.jsx","components/VfmApp.jsx","App.js","serviceWorker.js","store/authenticationReducer.jsx","index.js"],"names":["JPA_API_URL","components_AuthenticationService","username","password","axios","post","concat","token","sessionStorage","setItem","this","setupAxiosInterceptors","createJWTToken","removeItem","getItem","user","_this","interceptors","request","use","config","isUserLoggedIn","headers","authorization","Login","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","handleChange","bind","assertThisInitialized","loginClicked","event","setState","defineProperty","target","name","value","_this2","AuthenticationService","executeJwtAuthenticationService","then","response","onAuthenticate","registerSuccessfulLoginForJwt","data","history","push","catch","react_default","a","createElement","Fragment","className","type","onChange","onClick","Component","connect","dispatch","AuthenticatedRoute","react_router","to","Dashboard","loggedInUsername","auth","authenticatedUsername","Logout","PageNotFound","HeaderComponent","href","react_router_dom","logout","dataService_DriverDataService","get","id","delete","todo","put","Drivers","drivers","message","deleteDriverClicked","updateDriverlicked","updateDriverClicked","addDriverClicked","refreshDrivers","getLoggedInUserName","DriverDataService","retrieveAllDrivers","_this3","deleteDriver","_this4","map","driver","key","lastName","email","phone","Driver","match","params","oib","dateOfBirth","moment","Date","format","address","city","postalCode","identityCardNumber","issued","expires","onSubmit","Number","retrieveDriver","preventDefault","createDriver","updateDriver","placeholder","data-date-format","VehicleDataService","vehicle","Vehicle","length","width","height","kerbWeight","maximumPowerOutput","maximumSpeed","cylinderCapacity","co2","numberOfDoors","make","model","bodyType","typeOfFuel","vin","colour","tyres","registeredKeeper","owner","registrationNumber","dateOfFirstRegistration","dateOfFirstRegistrationInCroatia","validThrough","retrieveVehicle","createVehicle","updateVehicle","Vehicles","vehicles","deleteVehiclerClicked","updateVehiclelicked","addVehicleClicked","refreshVehicles","retrieveAllVehicles","deleteVehicle","VfmApp","Header","path","exact","component","components_AuthenticatedRoute","App","components_VfmApp","Boolean","window","location","hostname","initialState","authenticationReducer","arguments","undefined","action","objectSpread","rootReducer","combineReducers","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.290a628a.chunk.js","sourcesContent":["export const API_URL = 'http://localhost:8080'\nexport const JPA_API_URL = 'http://localhost:8080/jpa'\n","import axios from 'axios'\nimport { API_URL } from '../Constants';\n\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n\nclass AuthenticationService {\n\n    executeJwtAuthenticationService(username, password) {\n        return axios.post(`${API_URL}/authenticate`, {\n            username,\n            password\n        })\n    }\n\n    registerSuccessfulLoginForJwt(username, token) {\n        sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username)\n        this.setupAxiosInterceptors(this.createJWTToken(token))\n    }\n\n    createJWTToken(token) {\n        return 'Bearer ' + token\n    }\n\n    logout() {\n        sessionStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n    }\n\n    isUserLoggedIn() {\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\n        if (user === null) return false\n        return true\n    }\n\n    getLoggedInUserName() {\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\n        if (user === null) return ''\n        return user\n    }\n\n    setupAxiosInterceptors(token) {\n\n        axios.interceptors.request.use(\n            (config) => {\n                if (this.isUserLoggedIn()) {\n                    config.headers.authorization = token\n                }\n                return config\n            }\n        )\n    }\n}\n\nexport default new AuthenticationService()","import React, { Component } from 'react';\nimport AuthenticationService from './AuthenticationService.js'\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../store/actions';\n\n//\nclass Login extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: '',\n            password: '',\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]\n                    : event.target.value\n            }\n        )\n    }\n\n    loginClicked() {\n        AuthenticationService\n            .executeJwtAuthenticationService(this.state.username, this.state.password)\n            .then((response) => {\n\n                this.props.onAuthenticate(this.state.username)\n                AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n                this.props.history.push(`/dashboard/${this.state.username}`)\n\n            }).catch(() => {\n                this.setState({ username: '' })\n                this.setState({ password: '' })\n            })\n    }\n\n    render() {\n        return (\n            <>\n                <h1>Login</h1>\n                <div className=\"container\">\n                    <div>User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} /></div>\n                    <div>Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} /></div>\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n                </div>\n            </>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuthenticate: (username) => dispatch({ type: actionTypes.AUTHENTICATE_USER, username: username }),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Login);","export const IS_USER_LOGGED_IN = 'IS_USER_LOGGED_IN';\nexport const AUTHENTICATE_USER = 'AUTHENTICATE_USER';\n","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass AuthenticatedRoute extends Component {\n    render() {\n        if (AuthenticationService.isUserLoggedIn()) {\n            return <Route {...this.props} />\n        } else {\n            return <Redirect to=\"/login\" />\n        }\n\n    }\n}\n\nexport default AuthenticatedRoute","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Dashboard extends Component {\n\n    render() {\n        return (\n            <>\n                <div>\n                    Authenticated user is: {this.props.loggedInUsername}\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loggedInUsername: state.auth.authenticatedUsername,\n    };\n};\n\nexport default connect(mapStateToProps)(Dashboard);","import React, { Component } from 'react'\n\nclass Logout extends Component {\n    render() {\n        return (\n            <>\n                <h1>You are logged out</h1>\n                <div className=\"container\">\n                    Thank You for Using VFM :)\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Logout","import React from 'react'\n\nfunction PageNotFound() {\n    return (\n        <>\n            <h1>Page not found :(</h1>\n        </>)\n}\n\nexport default PageNotFound","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport AuthenticationService from './AuthenticationService.js'\nimport { connect } from 'react-redux';\n\nclass HeaderComponent extends Component {\n\n    render() {\n\n        return (\n            <header>\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                    <div><a href=\"https://github.com/MarioBanay\" className=\"navbar-brand\">VFMS</a></div>\n                    <ul className=\"navbar-nav\">\n                    {this.props.isUserLoggedIn && <li><Link className=\"nav-link\" to={`/dashboard/${this.props.authenticatedUsername}`}>Home</Link></li>}\n                    {this.props.isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/drivers\">Drivers</Link></li>}\n                    {this.props.isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/vehicles\">Vehicles</Link></li>}\n                    {this.props.isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/routes\">Routes</Link></li>}\n                    </ul>\n                    <ul className=\"navbar-nav navbar-collapse justify-content-end\">\n                        {!this.props.isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/login\">Login</Link></li>}\n                        {this.props.isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/logout\" onClick={AuthenticationService.logout}>Logout</Link></li>}\n                    </ul>\n                </nav>\n            </header>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isUserLoggedIn: state.auth.isUserLoggedIn,\n        authenticatedUsername: state.auth.authenticatedUsername,\n    };\n};\n\nexport default connect(mapStateToProps)(HeaderComponent);","import axios from 'axios'\nimport { JPA_API_URL } from '../../Constants'\n\nclass DriverDataService {\n\n    retrieveAllDrivers(name) {\n        //console.log('executed service')\n        return axios.get(`${JPA_API_URL}/users/${name}/drivers`);\n    }\n\n    retrieveDriver(name, id) {\n        //console.log('executed service')\n        return axios.get(`${JPA_API_URL}/users/${name}/drivers/${id}`);\n    }\n\n    deleteDriver(name, id) {\n        //console.log('executed service')\n        return axios.delete(`${JPA_API_URL}/users/${name}/drivers/${id}`);\n    }\n\n    updateDriver(name, id, todo) {\n        //console.log('executed service')\n        return axios.put(`${JPA_API_URL}/users/${name}/drivers/${id}`, todo);\n    }\n\n    createDriver(name, todo) {\n        // console.log('createDriver executed!')\n        return axios.post(`${JPA_API_URL}/users/${name}/drivers/`, todo);\n    }\n}\n\nexport default new DriverDataService()","import React, { Component } from 'react'\nimport DriverDataService from '../api/dataService/DriverDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass Drivers extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            drivers: [],\n            message: null\n        }\n        this.deleteDriverClicked = this.deleteDriverClicked.bind(this)\n        this.updateDriverlicked = this.updateDriverClicked.bind(this)\n        this.addDriverClicked = this.addDriverClicked.bind(this)\n        this.refreshDrivers = this.refreshDrivers.bind(this)\n    }\n\n    componentDidMount() {\n        this.refreshDrivers();\n    }\n\n    refreshDrivers() {\n        let username = AuthenticationService.getLoggedInUserName()\n        DriverDataService.retrieveAllDrivers(username)\n            .then(\n                response => {\n                    this.setState({ drivers: response.data })\n                }\n            )\n    }\n\n    deleteDriverClicked(id) {\n        let username = AuthenticationService.getLoggedInUserName()\n        //console.log(id + \" \" + username);\n        DriverDataService.deleteDriver(username, id)\n            .then(\n                response => {\n                    this.setState({ message: `Delete of driver ${id} Successful` })\n                    this.refreshDrivers()\n                }\n            )\n\n    }\n\n    addDriverClicked() {\n        this.props.history.push(`/drivers/-1`)\n    }\n\n    updateDriverClicked(id) {\n        this.props.history.push(`/drivers/${id}`)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Drivers</h1>\n                <div className=\"container\">\n                    <div>\n                        <button className=\"btn btn-success m-3\" onClick={this.addDriverClicked}>Add driver</button>\n                        <br />\n                    </div>\n                    {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Last Name</th>\n                                <th>Email</th>\n                                <th>Phone</th>\n                                <th></th>\n                                <th></th>\n\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.drivers.map(\n                                    driver =>\n                                        <tr key={driver.id}>\n                                            <td>{driver.name}</td>\n                                            <td>{driver.lastName}</td>\n                                            <td>{driver.email}</td>\n                                            <td>{driver.phone}</td>\n                                            <td><button className=\"btn btn-success\" onClick={() => this.updateDriverClicked(driver.id)}>Edit</button></td>\n                                            <td><button className=\"btn btn-warning\" onClick={() => this.deleteDriverClicked(driver.id)}>Delete</button></td>\n                                        </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Drivers","import React, { Component } from 'react'\nimport AuthenticationService from './AuthenticationService.js'\nimport DriverDataService from '../api/dataService/DriverDataService.js';\nimport moment from 'moment'\n\nclass Driver extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            name: '',\n            lastName: '',\n            oib: '',\n            dateOfBirth: moment(new Date()).format('YYYY-MM-DD'),\n            address: '',\n            city: '',\n            postalCode: '',\n            email: '',\n            phone: '',\n            identityCardNumber: '',\n            issued: moment(new Date()).format('YYYY-MM-DD'),\n            expires: moment(new Date()).format('YYYY-MM-DD'),\n            username: '',\n            password: '',\n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n\n\n    }\n\n    componentDidMount() {\n\n        if (Number(this.state.id) === -1) {\n            return\n        }\n\n        let username = AuthenticationService.getLoggedInUserName()\n\n        DriverDataService.retrieveDriver(username, this.state.id)\n            .then(response => {\n                this.setState({\n                    name: response.data.name,\n                    lastName: response.data.lastName,\n                    oib: response.data.oib,\n                    dateOfBirth: moment(response.data.dateOfBirth).format('YYYY-MM-DD'),\n                    address: response.data.address,\n                    city: response.data.city,\n                    postalCode: response.data.postalCode,\n                    email: response.data.email,\n                    phone: response.data.phone,\n                    identityCardNumber: response.data.identityCardNumber,\n                    issued: moment(response.data.issued).format('YYYY-MM-DD'),\n                    expires: moment(response.data.expires).format('YYYY-MM-DD'),\n                    username: response.data.username,\n                    password: response.data.password,\n                })\n            })\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]\n                    : event.target.value\n            }\n        )\n    }\n\n    onSubmit(event) {\n        event.preventDefault();\n        let username = AuthenticationService.getLoggedInUserName()\n\n        let driver = {\n            id: this.state.id,\n            name: event.target.name.value,\n            lastName: event.target.lastName.value,\n            oib: event.target.oib.value,\n            dateOfBirth: event.target.dateOfBirth.value,\n            address: event.target.address.value,\n            city: event.target.city.value,\n            postalCode: event.target.postalCode.value,\n            email: event.target.email.value,\n            phone: event.target.phone.value,\n            identityCardNumber: event.target.identityCardNumber.value,\n            issued: event.target.issued.value,\n            expires: event.target.expires.value,\n            username: event.target.username.value,\n            password: event.target.password.value,\n        }\n\n        if (Number(this.state.id) === -1) {\n\n            DriverDataService\n                .createDriver(username, driver)\n                .then(() => {\n                    this.props.history.push('/drivers')\n\n                }\n                )\n        } else {\n            DriverDataService.updateDriver(username, this.state.id, driver)\n                .then((response) => {\n                    this.props.history.push('/drivers')\n                })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Driver</h1>\n                <div className=\"container\">\n                    <form onSubmit={this.onSubmit}>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-3\">\n                                <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"name\" value={this.state.name} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-3\">\n                                <input type=\"text\" className=\"form-control\" name=\"lastName\" placeholder=\"last name\" value={this.state.lastName} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-3\">\n                                <input type=\"text\" className=\"form-control\" name=\"oib\" placeholder=\"oib\" value={this.state.oib} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-3\">\n                                <input type=\"date\" data-date-format=\"YYYY-MM-DD\" className=\"form-control\" name=\"dateOfBirth\" placeholder=\"date of birth\" value={this.state.dateOfBirth} onChange={this.handleChange} />\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"text\" className=\"form-control\" name=\"address\" placeholder=\"address\" value={this.state.address} onChange={this.handleChange} />\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"text\" className=\"form-control\" name=\"city\" placeholder=\"city\" value={this.state.city} onChange={this.handleChange} />\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-6\">\n                                <input type=\"text\" className=\"form-control\" name=\"postalCode\" placeholder=\"postal code\" value={this.state.postalCode} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <input type=\"text\" className=\"form-control\" name=\"email\" placeholder=\"email\" value={this.state.email} onChange={this.handleChange} />\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-6\">\n                                <input type=\"text\" className=\"form-control\" name=\"phone\" placeholder=\"phone\" value={this.state.phone} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <input type=\"text\" className=\"form-control\" name=\"identityCardNumber\" placeholder=\"identity card number\" value={this.state.identityCardNumber} onChange={this.handleChange} />\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-6\">\n                                <input type=\"date\" className=\"form-control\" name=\"issued\" placeholder=\"issued\" value={this.state.issued} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <input type=\"date\" className=\"form-control\" name=\"expires\" placeholder=\"expires\" value={this.state.expires} onChange={this.handleChange} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-6\">\n                                <input type=\"text\" className=\"form-control\" name=\"username\" placeholder=\"username\" value={this.state.username} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <input type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"password\" value={this.state.password} onChange={this.handleChange} />\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-2\">\n\n                                <button className=\"btn btn-primary\" type=\"submit\">Save</button>\n                            </div>\n\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Driver","import axios from 'axios'\nimport { JPA_API_URL } from '../../Constants'\n\nclass DriverDataService {\n\n    retrieveVehicle(name, id) {\n        //console.log('executed service')\n        return axios.get(`${JPA_API_URL}/users/${name}/vehicles/${id}`);\n    }\n\n    deleteVehicle(name, id) {\n        //console.log('executed service')\n        return axios.delete(`${JPA_API_URL}/users/${name}/vehicles/${id}`);\n    }\n\n    updateVehicle(name, id, vehicle) {\n        //console.log('executed service')\n        return axios.put(`${JPA_API_URL}/users/${name}/vehicles/${id}`, vehicle);\n    }\n\n    createVehicle(name, vehicle) {\n        // console.log('createDriver executed!')\n        return axios.post(`${JPA_API_URL}/users/${name}/vehicles/`, vehicle);\n    }\n\n    retrieveAllVehicles(name) {\n        //console.log('executed service')\n        return axios.get(`${JPA_API_URL}/users/${name}/vehicles`);\n    }\n\n}\n\nexport default new DriverDataService()","import React, { Component } from 'react'\nimport AuthenticationService from './AuthenticationService.js'\nimport VehicleDataService from '../api/dataService/VehicleDataService.js';\nimport moment from 'moment'\n\nclass Vehicle extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            length: '',\n            width: '',\n            height: '',\n            kerbWeight: '',\n            maximumPowerOutput: '',\n            maximumSpeed: '',\n            cylinderCapacity: '',\n            co2: '',\n            numberOfDoors: '',\n            make: '',\n            model: '',\n            type: '',\n            bodyType: '',\n            typeOfFuel: '',\n            vin: '',\n            colour: '',\n            tyres: '',\n            registeredKeeper: '',\n            owner: '',\n            registrationNumber: '',\n            dateOfFirstRegistration: moment(new Date()).format('YYYY-MM-DD'),\n            dateOfFirstRegistrationInCroatia: moment(new Date()).format('YYYY-MM-DD'),\n            validThrough: moment(new Date()).format('YYYY-MM-DD'),\n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    componentDidMount() {\n\n        if (Number(this.state.id) === -1) {\n            return\n        }\n\n        let username = AuthenticationService.getLoggedInUserName()\n\n        VehicleDataService.retrieveVehicle(username, this.state.id)\n            .then(response => {\n                this.setState({\n                    length: response.data.length,\n                    width: response.data.width,\n                    height: response.data.height,\n                    kerbWeight: response.data.kerbWeight,\n                    maximumPowerOutput: response.data.maximumPowerOutput,\n                    maximumSpeed: response.data.maximumSpeed,\n                    cylinderCapacity: response.data.cylinderCapacity,\n                    co2: response.data.co2,\n                    numberOfDoors: response.data.numberOfDoors,\n                    make: response.data.make,\n                    model: response.data.model,\n                    type: response.data.type,\n                    bodyType: response.data.bodyType,\n                    typeOfFuel: response.data.typeOfFuel,\n                    vin: response.data.vin,\n                    colour: response.data.colour,\n                    tyres: response.data.tyres,\n                    registeredKeeper: response.data.registeredKeeper,\n                    owner: response.data.owner,\n                    registrationNumber: response.data.registrationNumber,\n                    dateOfFirstRegistration: moment(response.data.dateOfFirstRegistration).format('YYYY-MM-DD'),\n                    dateOfFirstRegistrationInCroatia: moment(response.data.dateOfFirstRegistrationInCroatia).format('YYYY-MM-DD'),\n                    validThrough: moment(response.data.validThrough).format('YYYY-MM-DD'),\n                })\n            })\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            }\n        )\n    }\n\n    onSubmit(event) {\n\n        event.preventDefault();\n        let username = AuthenticationService.getLoggedInUserName()\n\n        let vehicle = {\n            id: this.state.id,\n            length: event.target.length.value,\n            width: event.target.width.value,\n            height: event.target.height.value,\n            kerbWeight: event.target.kerbWeight.value,\n            maximumPowerOutput: event.target.maximumPowerOutput.value,\n            maximumSpeed: event.target.maximumSpeed.value,\n            cylinderCapacity: event.target.cylinderCapacity.value,\n            co2: event.target.co2.value,\n            numberOfDoors: event.target.numberOfDoors.value,\n            make: event.target.make.value,\n            model: event.target.model.value,\n            type: event.target.type.value,\n            bodyType: event.target.bodyType.value,\n            typeOfFuel: event.target.typeOfFuel.value,\n            vin: event.target.vin.value,\n            colour: event.target.colour.value,\n            tyres: event.target.tyres.value,\n            registeredKeeper: event.target.registeredKeeper.value,\n            owner: event.target.owner.value,\n            registrationNumber: event.target.registrationNumber.value,\n            dateOfFirstRegistration: moment(event.target.dateOfFirstRegistration.value).format('YYYY-MM-DD'),\n            dateOfFirstRegistrationInCroatia: moment(event.target.dateOfFirstRegistrationInCroatia.value).format('YYYY-MM-DD'),\n            validThrough: moment(event.target.validThrough.value).format('YYYY-MM-DD'),\n        }\n\n        if (Number(this.state.id) === -1) {\n\n            VehicleDataService\n                .createVehicle(username, vehicle)\n                .then(() => {\n                    this.props.history.push('/vehicles')\n                })\n        } else {\n            VehicleDataService.updateVehicle(username, this.state.id, vehicle)\n                .then((response) => {\n                    this.props.history.push('/vehicles')\n                })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Vehicle</h1>\n                <div className=\"container\">\n                    <form onSubmit={this.onSubmit}>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-4\">\n                                <input type=\"text\" className=\"form-control\" name=\"vin\" placeholder=\"vin\" value={this.state.vin} onChange={this.handleChange} />\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"text\" className=\"form-control\" name=\"make\" placeholder=\"make\" value={this.state.make} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"text\" className=\"form-control\" name=\"model\" placeholder=\"model\" value={this.state.model} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"text\" className=\"form-control\" name=\"type\" placeholder=\"type\" value={this.state.type} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"text\" className=\"form-control\" name=\"bodyType\" placeholder=\"body type\" value={this.state.bodyType} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"text\" className=\"form-control\" name=\"colour\" placeholder=\"colour\" value={this.state.colour} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"text\" className=\"form-control\" name=\"numberOfDoors\" placeholder=\"number of doors\" value={this.state.numberOfDoors} onChange={this.handleChange} />\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"text\" className=\"form-control\" name=\"maximumPowerOutput\" placeholder=\"maximum power output\" value={this.state.maximumPowerOutput} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"text\" className=\"form-control\" name=\"cylinderCapacity\" placeholder=\"cylinder capacity\" value={this.state.cylinderCapacity} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"text\" className=\"form-control\" name=\"co2\" placeholder=\"co2\" value={this.state.co2} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"text\" className=\"form-control\" name=\"maximumSpeed\" placeholder=\"maximum speed\" value={this.state.maximumSpeed} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"text\" className=\"form-control\" name=\"typeOfFuel\" placeholder=\"type of fuel\" value={this.state.typeOfFuel} onChange={this.handleChange} />\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"text\" className=\"form-control\" name=\"length\" placeholder=\"length\" value={this.state.length} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"text\" className=\"form-control\" name=\"width\" placeholder=\"width\" value={this.state.width} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"text\" className=\"form-control\" name=\"height\" placeholder=\"height\" value={this.state.height} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"text\" className=\"form-control\" name=\"kerbWeight\" placeholder=\"kerb weight\" value={this.state.kerbWeight} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"text\" className=\"form-control\" name=\"tyres\" placeholder=\"tyres\" value={this.state.tyres} onChange={this.handleChange} />\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"text\" className=\"form-control\" name=\"registrationNumber\" placeholder=\"pregistration numberhone\" value={this.state.registrationNumber} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"text\" className=\"form-control\" name=\"owner\" placeholder=\"owner\" value={this.state.owner} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"text\" className=\"form-control\" name=\"registeredKeeper\" placeholder=\"registered keeper\" value={this.state.registeredKeeper} onChange={this.handleChange} />\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"date\" className=\"form-control\" name=\"dateOfFirstRegistration\" placeholder=\"dateOfFirstRegistration\" value={this.state.dateOfFirstRegistration} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"date\" className=\"form-control\" name=\"dateOfFirstRegistrationInCroatia\" placeholder=\"dateOfFirstRegistrationInCroatia\" value={this.state.dateOfFirstRegistrationInCroatia} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group col-md-2\">\n                                <input type=\"date\" className=\"form-control\" name=\"validThrough\" placeholder=\"expvalidThroughires\" value={this.state.validThrough} onChange={this.handleChange} />\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-2\">\n                                <button className=\"btn btn-primary\" type=\"submit\">Save</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Vehicle","import React, { Component } from 'react'\nimport VehicleDataService from '../api/dataService/VehicleDataService'\nimport AuthenticationService from './AuthenticationService.js'\nimport moment from 'moment'\n\nclass Vehicles extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            vehicles: [],\n            message: null\n        }\n        this.deleteVehiclerClicked = this.deleteVehiclerClicked.bind(this)\n        this.updateVehiclelicked = this.updateVehiclelicked.bind(this)\n        this.addVehicleClicked = this.addVehicleClicked.bind(this)\n        this.refreshVehicles = this.refreshVehicles.bind(this)\n    }\n\n    componentDidMount() {\n        this.refreshVehicles();\n    }\n\n    refreshVehicles() {\n        let username = AuthenticationService.getLoggedInUserName()\n        VehicleDataService.retrieveAllVehicles(username)\n            .then(\n                response => {\n                    this.setState({ vehicles: response.data })\n\n                }\n            )\n    }\n\n    deleteVehiclerClicked(id) {\n        let username = AuthenticationService.getLoggedInUserName()\n        VehicleDataService.deleteVehicle(username, id)\n            .then(\n                response => {\n                    this.setState({ message: `Delete of vehicle ${id} Successful` })\n                    this.refreshVehicles()\n                }\n            )\n\n    }\n\n    addVehicleClicked() {\n        this.props.history.push(`/vehicles/-1`)\n    }\n\n    updateVehiclelicked(id) {\n        this.props.history.push(`/vehicles/${id}`)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Vehicles</h1>\n                <div className=\"container\">\n                    <div>\n                        <button className=\"btn btn-success m-3\" onClick={this.addVehicleClicked}>Add vehicle</button>\n                        <br />\n                    </div>\n                    {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Registration number</th>\n                                <th>Registration valid through</th>\n                                <th>Make</th>\n                                <th>Model</th>\n                                <th></th>\n                                <th></th>\n\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.vehicles.map(\n                                    vehicle =>\n                                        <tr key={vehicle.id}>\n                                            <td>{vehicle.registrationNumber}</td>\n                                            <td>{moment(vehicle.validThrough).format('DD.MM.YYYY')}</td>\n                                            <td>{vehicle.make}</td>\n                                            <td>{vehicle.model}</td>\n                                            <td><button className=\"btn btn-success\" onClick={() => this.updateVehiclelicked(vehicle.id)}>Edit</button></td>\n                                            <td><button className=\"btn btn-warning\" onClick={() => this.deleteVehiclerClicked(vehicle.id)}>Delete</button></td>\n                                        </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Vehicles","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './Login';\nimport AuthenticatedRoute from './AuthenticatedRoute';\nimport Dashboard from './Dashboard';\nimport Logout from './Logout';\nimport PageNotFound from './PageNotFound';\nimport Header from './Header';\nimport Drivers from './Drivers';\nimport Driver from './Driver';\nimport Vehicle from './Vehicle';\nimport Vehicles from './Vehicles';\n\nclass VfmApp extends Component {\n  render() {\n    return (\n      <div className=\"TodoApp\">\n        <Router>\n          <>\n            <Header />\n            <Switch>\n              <Route path=\"/\" exact component={Login} />\n              <Route path=\"/login\" component={Login} />\n              <AuthenticatedRoute path=\"/logout\" component={Logout} />\n              <AuthenticatedRoute path=\"/dashboard/:name\" component={Dashboard} />\n              <AuthenticatedRoute path=\"/drivers/:id\" component={Driver} />\n              <AuthenticatedRoute path=\"/drivers\" component={Drivers} />\n              <AuthenticatedRoute path=\"/vehicles/:id\" component={Vehicle} />\n              <AuthenticatedRoute path=\"/vehicles\" component={Vehicles} />\n              \n\n\n              <Route component={PageNotFound} />\n\n            </Switch>\n          </>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default VfmApp;\n","import React, { Component } from 'react';\nimport VfmApp from './components/VfmApp.jsx';\nimport './bootstrap.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <VfmApp />\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './actions';\n\nconst initialState = {\n    isUserLoggedIn: false,\n    authenticatedUsername: '',\n}\n\nconst authenticationReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTHENTICATE_USER:\n\n            return {\n                ...state,\n                authenticatedUsername: action.username,\n                isUserLoggedIn: true\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default authenticationReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\nimport authenticationReducer from './store/authenticationReducer';\n\nconst rootReducer = combineReducers({\n    auth: authenticationReducer\n});\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}